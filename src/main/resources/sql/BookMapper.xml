<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.booksearchapp.mappers.BookMapper">

    <!-- 書籍の一件取得 -->
    <select id="get" resultMap="bookList">
        SELECT
            books.id                as  books_id,
            books.isbn_code         as  books_isbn_code,
            books.name              as  books_name,
            books.number            as  books_number,
            books.image_path        as  books_image_path,
            books.link              as  books_link,
            tags.id               as  tags_id,
            tags.name             as  tags_name,
            tags.sort_number      as  tags_sort_number,
            tags.tag_group_id   as  tags_tag_group_id,
            genres.id           as  genres_id,
            genres.name         as  genres_name,
            genres.sort_number  as  genres_sort_number,
            books.number - coalesce(book_count.lending_count, 0)  as  books_count
        FROM books
        LEFT JOIN book_genres
            ON books.id = book_genres.book_id
        LEFT JOIN genres
            ON book_genres.genre_id = genres.id
        LEFT JOIN book_tags
            ON books.id = book_tags.book_id
        LEFT JOIN tags
            ON book_tags.tag_id = tags.id
        LEFT JOIN tag_groups
            ON tags.tag_group_id = tag_groups.id
        LEFT JOIN
            (SELECT book_id, count(*) AS lending_count
                FROM lendings
                WHERE return_time IS NULL
                GROUP BY book_id) book_count
            ON books.id = book_count.book_id
        WHERE books.id = #{id}
            AND books.is_deleted = 0
        GROUP BY
            books.id,
            tags.id,
            genres.id
    </select>

    <!-- 書籍の検索 -->
    <select id="search" parameterType="com.example.booksearchapp.forms.SearchForm" resultMap="bookList">
        SELECT
            books.id                as  books_id,
            books.isbn_code         as  books_isbn_code,
            books.name              as  books_name,
            books.number            as  books_number,
            books.image_path        as  books_image_path,
            books.link              as  books_link,
            tags.id               as  tags_id,
            tags.name             as  tags_name,
            tags.sort_number      as  tags_sort_number,
            tags.tag_group_id   as  tags_tag_group_id,
            genres.id           as  genres_id,
            genres.name         as  genres_name,
            genres.sort_number  as  genres_sort_number,
            books.number - coalesce(book_count.lending_count, 0)  as  books_count
        FROM books
        LEFT JOIN book_genres
            ON books.id = book_genres.book_id
        LEFT JOIN genres
            ON book_genres.genre_id = genres.id
        LEFT JOIN book_tags
            ON books.id = book_tags.book_id
        LEFT JOIN tags
            ON book_tags.tag_id = tags.id
        LEFT JOIN tag_groups
            ON tags.tag_group_id = tag_groups.id
        LEFT JOIN
            (SELECT book_id, count(*) AS lending_count
                FROM lendings
                WHERE return_time IS NULL
                GROUP BY book_id) book_count
            ON books.id = book_count.book_id
        WHERE books.is_deleted = 0
        <if test="name != null and name != ''">AND books.name LIKE'%${name}%'</if>
        <if test="tag != null and tag.size() > 0">AND tags.id IN
            <foreach item="tag" open="(" close=")" collection="tag" separator=",">
                #{tag}
            </foreach>
        </if>
        <if test="genre != null and genre.size() > 0">AND genres.id IN
            <foreach item="genre" open="(" close=")" collection="genre" separator=",">
                #{genre}
            </foreach>
        </if>
        GROUP BY
            books.id,
            tags.id,
            genres.id
    </select>

    <!-- 本詳細ページ　貸出履歴 -->
    <select id="bookHistory" resultMap="lendingList">
        SELECT
            lendings.lending_time   as  lendings_lending_time,
            users.first_name        as  users_first_name,
            users.last_name         as  users_last_name
        FROM lendings
        LEFT JOIN users
            ON lendings.user_id = users.id
        WHERE lendings.book_id = #{id}
        ORDER BY lendings.lending_time DESC
        LIMIT 3
    </select>

    <!-- 結合 -->
    <resultMap type="com.example.booksearchapp.entities.Book" id="bookList">
        <id column="books_id" property="id"/>
        <result column="books_isbn_code" property="isbnCode"/>
        <result column="books_name" property="name"/>
        <result column="books_number" property="number"/>
        <result column="books_image_path" property="imagePath"/>
        <result column="books_link" property="link"/>
        <result column="books_is_deleted" property="isDeleted"/>
        <result column="books_count" property="booksCount"/>
        <collection property="tags" ofType="com.example.booksearchapp.entities.Tag">
            <result column="tags_id" property="id"/>
            <result column="tags_name" property="name"/>
            <result column="tags_sort_number" property="sortNumber"/>
            <result column="tags_tag_group_id" property="tagGroupId"/>
        </collection>
        <collection property="genres" ofType="com.example.booksearchapp.entities.Genre">
            <result column="genres_id" property="id"/>
            <result column="genres_name" property="name"/>
            <result column="genres_is_deleted" property="isDeleted"/>
            <result column="genres_sort_number" property="sortNumber"/>
        </collection>
    </resultMap>

    <resultMap type="com.example.booksearchapp.entities.Lending" id="lendingList">
        <id column="lendings_id" property="id"/>
        <result column="lendings_user_id" property="userId"/>
        <result column="lendings_lending_time" property="lendingTime"/>
        <result column="lendings_return_time" property="returnTime"/>
        <association property="user" javaType="com.example.booksearchapp.entities.User">
            <id column="users_id" property="id"/>
            <result column="users_first_name" property="firstName"/>
            <result column="users_last_name" property="lastName"/>
        </association>
    </resultMap>
</mapper>